// <auto-generated />
using System;
using ITEC_WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITEC_WebApp.Migrations
{
    [DbContext(typeof(ContextITEC))]
    [Migration("20210327152920_country")]
    partial class country
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ITEC_WebApp.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .HasColumnType("int");

                    b.Property<int?>("CountryIdCountry")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCity");

                    b.HasIndex("CountryIdCountry");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserIdUser")
                        .HasColumnType("int");

                    b.HasKey("IdCountry");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Covid", b =>
                {
                    b.Property<int>("IdCovid")
                        .HasColumnType("int");

                    b.Property<float>("ProcentageVaccination")
                        .HasColumnType("real");

                    b.HasKey("IdCovid");

                    b.ToTable("Covid");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Hotel", b =>
                {
                    b.Property<int>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityIdCity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("IdHotel");

                    b.HasIndex("CityIdCity");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Room", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelIdHotel")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("IdRoom");

                    b.HasIndex("HotelIdHotel");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleIdRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("RoleIdRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Weather", b =>
                {
                    b.Property<int>("IdWheather")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWheather");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.City", b =>
                {
                    b.HasOne("ITEC_WebApp.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryIdCountry");

                    b.HasOne("ITEC_WebApp.Models.Weather", "Weather")
                        .WithOne("City")
                        .HasForeignKey("ITEC_WebApp.Models.City", "IdCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Country", b =>
                {
                    b.HasOne("ITEC_WebApp.Models.User", null)
                        .WithMany("Countries")
                        .HasForeignKey("UserIdUser");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Covid", b =>
                {
                    b.HasOne("ITEC_WebApp.Models.Country", "Country")
                        .WithOne("Covid")
                        .HasForeignKey("ITEC_WebApp.Models.Covid", "IdCovid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Hotel", b =>
                {
                    b.HasOne("ITEC_WebApp.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityIdCity");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.Room", b =>
                {
                    b.HasOne("ITEC_WebApp.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelIdHotel");
                });

            modelBuilder.Entity("ITEC_WebApp.Models.User", b =>
                {
                    b.HasOne("ITEC_WebApp.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleIdRole");
                });
#pragma warning restore 612, 618
        }
    }
}
